using System;
using System.Collections.Generic;
using System.Linq;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using Nemerle.Compiler.Typedtree;
using Nemerle.Linq;
using Nemerle.Text;
using Nemerle.Utility;

namespace LinqToDB_Temp.MacroInternal.Mapping
{
	macro SetCultureExpr(type : PExpr, formatter : PExpr = null)
	{
		AutomationImpl.DoSetCultureExpr(type, formatter)
	}

	module AutomationImpl
	{
		public DoSetCultureExpr(type : PExpr, formatter : PExpr) : PExpr
		{
			def info = <[ $("info" : usesite) ]>;
			def f    = if (formatter == null) Name("NumberFormat") else formatter.ToName();

			<[
				SetConvertExpression(ToExpression(fun(v : $type)  : string { v.      ToString($info.$(f : name))          }));
				SetConvertExpression(ToExpression(fun(v : $type?) : string { v.Value.ToString($info.$(f : name))          }));
				SetConvertExpression(ToExpression(fun(s : string) : $type  {   $type.Parse(s, $info.$(f : name))          }));
				SetConvertExpression(ToExpression(fun(s : string) : $type? {   $type.Parse(s, $info.$(f : name)) : $type? }));
			]>
		}
	}
}
