using System;
using System.Collections.Specialized;
using System.Configuration;

using Nemerle;

namespace LinqToDB.Configuration
{
	abstract class ElementBase : ConfigurationElement
	{
		protected _properties : ConfigurationPropertyCollection = ConfigurationPropertyCollection();

		protected override Properties : ConfigurationPropertyCollection
		{
			get { _properties; }
		}

		protected override OnDeserializeUnrecognizedAttribute(name : string, value : string) : bool
		{
			def property = ConfigurationProperty(name, typeof(string), value);
			
			_properties.Add(property);
			
			base[property] = value;
			
			Attributes.Add(name, value);
			
			true
		}

		mutable _attributes : NameValueCollection;
		public   Attributes : NameValueCollection
		{
			get
			{
				_attributes ?? { _attributes = NameValueCollection(StringComparer.OrdinalIgnoreCase); _attributes }
			}
		}
	}
}
