using System;
using System.Configuration;
using System.Security;

using Nemerle;

namespace LinqToDB_Temp.Configuration
{
	class LinqToDBSection : ConfigurationSection
	{
		static _properties               : ConfigurationPropertyCollection = ConfigurationPropertyCollection();
		static _propDataProviders        : ConfigurationProperty           = ConfigurationProperty("dataProviders",        typeof(DataProviderElementCollection), DataProviderElementCollection(), ConfigurationPropertyOptions.None);
		static _propDefaultConfiguration : ConfigurationProperty           = ConfigurationProperty("defaultConfiguration", typeof(string),                        null,                            ConfigurationPropertyOptions.None);
		static _propDefaultDataProvider  : ConfigurationProperty           = ConfigurationProperty("defaultDataProvider",  typeof(string),                        null,                            ConfigurationPropertyOptions.None);

		static this()
		{
			_properties.Add(_propDataProviders);
			_properties.Add(_propDefaultConfiguration);
			_properties.Add(_propDefaultDataProvider);
		}
		
		public  static  Instance : LinqToDBSection
		{
		  mutable static _instance : LinqToDBSection;

			get
			{
				when (_instance == null)
					_instance = try ConfigurationManager.GetSection("linq2db") :> LinqToDBSection // если в try только одно выражение, то фигурные скобки можно опустить
						          catch { | _ is SecurityException => null };

				_instance
			}
		}

		protected override Properties : ConfigurationPropertyCollection
		{
			get { _properties }
		}

		public DataProviders : DataProviderElementCollection
		{
			get { base[_propDataProviders] :> DataProviderElementCollection }
		}

		public DefaultConfiguration : string { get { base[_propDefaultConfiguration] :> string } }
		public DefaultDataProvider  : string { get { base[_propDefaultDataProvider]  :> string } }
	}
}
